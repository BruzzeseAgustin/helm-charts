# This is quite incomplete and only provided as an example of what a filter might look like

filters:
  main: |-
    filter {
      if ![kubernetes] {
        drop { }
      }
      ruby {
            code => "event.set('timestamp',(event.get('@timestamp').to_f * 1000).to_i)"
      }
      if [message] =~ "oracle:" {   # Don't let secrets leak
        drop { }
      } else if [kubernetes][labels][app] == "rucio-server" {
        if [message] =~ "kube-probe" or [message] =~ "health-check" {
          drop { }
        }
      } else if [kubernetes][labels][app] == "rucio-daemons" {
        mutate {
          add_field => { "application" => "%{[kubernetes][container][name]}" }
        }
        if [kubernetes][labels][app] == "rucio-daemons" {
          if [stream] == "stdout" {
            grok {
               match => { "message" => "^(?<ts>\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2},\d{3})\t%{NUMBER:pid}\t%{LOGLEVEL:severity_label}\t%{GREEDYDATA:message}" }
               overwrite => ["message", "severity_label", "ts"]
               tag_on_failure => "_failed_parsing_ruciolog"
            }
          }
        }
      }
      mutate {
        add_field => { "type" => "rucio-k8s-logs"
                     }
      }
    }

